name: Easy Npm Publish
author: David Dearden
description:
  Use Conventional Commits to automatically update the package version, update the git tags and publish the package.
branding:
  icon: package
  color: red

runs:
  using: node20
  main: dist/index.js

inputs:
  registry-token:
    description: An auth token with access to publish to the registry.
    required: true
  github-token:
    description: A github token with access to write tags and releases to the repository.
  changelog-titles:
    description:
      'A JSON encoded object, mapping the conventional commit type to the section title to use in the changelog for that
      type. These values will be merged into and override the default titles. (ex. `{ "feat": "New Features" }`)'
  disable-git-tagging:
    description: Disable setting and/or updating the git tags.
    default: 'false'
  dry-run:
    description: Run the action without actually publishing the package or pushing git tags.
    default: 'false'
  enable-github-release:
    description: Create a GitHub Release.
    default: 'false'
  get-release-title-from-pr:
    description: >-
      Attempt to get the PR title from a PR associated to the git sha. If it is found, use the PR title as the release
      title. If not found, fall back to the release tag name. If the `release-title` has a truthy value, it will
      override this option. Note: The GITHUB_TOKEN requires pull-request: read permissions.
    default: 'false'
  git-tag-suffix:
    description: A value append to the git tags.
  latest-tag-name:
    description: The tag used to track the latest commit on the release branch.
    default: latest
  major-types:
    description: A comma-separated list of conventional commit types that trigger a major version change.
  minor-types:
    description:
      A comma-separated list of conventional commit types that trigger a minor version change. It defaults to `feat`
  npmrc-content:
    description: Manually set the contents of the .npmrc file written to the `npmrc-path` location.
  npmrc-path:
    description: A path to the `.npmrc` file. Defaults to `$HOME/.npmrc`.
  package-directory:
    description:
      The path to the directory containing the package to be published. It must be a relative path, relative to the root
      of the repository. It defaults to the root of the repository.
  private:
    description: Whether to publish the package as a `private` package.
    default: 'false'
  registry-url:
    description: The URL of the package registry to publish to. It defaults to npm's registry `registry.npmjs.org`.
  release-title:
    description:
      The title to use for the GitHub release. If not set, or an empty string, the release tag name will be used.
  scripts-package-directory:
    description:
      The path to a directory containing a package.json file which contains the project's scripts. Set this to use a
      custom `publish` script in the package.json file. It must be a relative path, relative to the root of the
      repository. It defaults to the value of the `package-directory` input.
  version-override:
    description:
      The version to use for publishing the package instead of determining the version using conventional commits.

outputs:
  current-version:
    description: The version of the package before it is updated.
  increment-type:
    description: The type of version increment (if applicable) in ['major', 'minor', 'patch'].
  next-version:
    description: The new version of the package (ex. '1.2.3').
  next-version-major:
    description: The major portion of the new version of the package (ex. '1').
  next-version-minor:
    description: The minor portion of the new version of the package (ex. '2').
  next-version-patch:
    description: The patch portion of the new version of the package (ex. '3').
